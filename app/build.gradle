apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.jnihelloworld"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

task makeJar(type: Copy) {
//删除存在的
    delete 'build/libs/jni.jar'
//设置拷贝的文件
    from('build/intermediates/bundles/default/')
//打进jar包后的文件目录
    into('build/libs/')
//将classes.jar放入build/libs/目录下
//include ,exclude参数来设置过滤
//（我们只关心classes.jar这个文件）
    include('classes.jar')
//重命名
    rename('classes.jar', 'jni.jar')
}

makeJar.dependsOn(build)
